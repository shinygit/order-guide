describe('create order behavior', () => {
  beforeEach(() => {
    cy.login()
    cy.visit('/')
  })

  it('creates new order', () => {
    cy.contains('button', 'Baker')
      .click()
      .parent()
      .should('have.class', 'bg-orange-300')
    cy.contains('Order placed with Baker?').click()
    cy.contains('button', 'Baker').parent().should('have.class', 'bg-green-300')
    cy.get('[data-cy=increaseOrderAmount]').first().click()
    cy.get('[name="orderDate"]').type('9000-01-18')
    cy.contains('Create new order').click()
    cy.contains('01/18/9000')
    cy.contains('button', 'ALL').click()
    cy.contains('[name="supplierName"]', 'Market Price')
    cy.contains('button', 'Baker')
      .parent()
      .should('have.class', 'bg-orange-300')
    cy.get('[data-cy=decreaseOrderAmount]')
      .first()
      .parent()
      .parent()
      .contains(/^[0-9]$/)
      .should('not.exist')
  })

  it('fails creating a new order on bad date', () => {
    cy.get('[name="orderDate"]').type('9000-01-18')
    cy.contains('Create new order').click()
    cy.contains('Order date already exists.')
    cy.get('[name="orderDate"]').type('9000-01-17')
    cy.contains('Create new order').click()
    cy.contains('New order date must be more recent than the last order.')
  })
})
